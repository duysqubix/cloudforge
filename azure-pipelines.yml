trigger:
  branches:
    include:
      - master
pr:
  branches:
    include:
      - '*'
pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: CopyFiles@2
    displayName: "Copy EC source code"
    inputs:
      SourceFolder: .
      TargetFolder: '$(build.artifactstagingdirectory)/ecdeploy'

  - script: python -m pip install -r requirements.txt
    displayName: "Install Dependencies"

  - task: GoTool@0
    inputs:
      version : '1.17.3'

  - task: Bash@3
    displayName: "Testing Code"
    inputs:
      targetType: 'inline'
      workingDirectory: '$(build.artifactstagingdirectory)/ecdeploy/'
      script: |
        go test ./... -v 

  - task: Bash@3
    displayName: "Compiling Deployment Engine"
    inputs:
      targetType: 'inline'
      workingDirectory: '$(build.artifactstagingdirectory)/ecdeploy/'
      script: |
        go build . && \
        mkdir -p $(build.artifactstagingdirectory)/ecdeploy/bin && \
        mv ec $(build.artifactstagingdirectory)/ecdeploy/bin
  
  - task: Bash@3
    displayName: "Compiling Modules"
    inputs:
      targetType: 'inline'
      workingDirectory: "$(build.artifactstagingdirectory)/ecdeploy/"
      script:  bash ./scripts/compile_modules.sh


  - task: Bash@3
    displayName: "Copy Over useful scripts"
    inputs:
      targetType: 'inline'
      workingDirectory: '$(build.artifactstagingdirectory)/ecdeploy/'
      script: |
        cp scripts/tree $(build.artifactstagingdirectory)/ecdeploy/bin
        cp deploy.sh $(build.artifactstagingdirectory)/ecdeploy/bin

  - task: PublishBuildArtifacts@1
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master') # only publish artifacts if this is built from the main branch
    displayName: "Publish binary"
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)/ecdeploy/bin'
      ArtifactName: 'core'
      
